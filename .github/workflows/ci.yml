name: Testing an deployment of stocks_products

on:
  push:
    branches: [master]

jobs:
  testing:
    runs-on: ubuntu-22.04
    env:
      HOSTS_ALLOWED: ${{ secrets.ALLOWED_HOSTS }}
      IS_DEBUG: ${{ secrets.DEBUG }}
      NAME_DB: ${{ secrets.DB_NAME }}
      PASSWORD_DB: ${{ secrets.DB_PASSWORD }}
      USER_DB: ${{ secrets.DB_USER }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      PORT_DB: ${{ secrets.DB_PORT }}
      HOST_DB: ${{ secrets.DB_HOST }}
      DB_ENGINE: ${{ secrets.DB_ENGINE}}
    services:
      postgresql_service:
        image: postgres:12
        env:
          POSTGRES_DB: ${{ env.NAME_DB }}
          POSTGRES_USER: ${{ env.USER_DB }}
          POSTGRES_PASSWORD: ${{ env.PASSWORD_DB }}
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready
          --health-interval 5s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Проверка изменений в репозитории
        uses: actions/checkout@v3

      - name: Установка питона и доп библиотек
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Установка зависимостей
        run: pip install -r requirements.txt

      - name: Линтинг
        run: flake8 logistic --exclude logistic/migrations

      - name: Тестирование pytest
        run: pytest
        env:
          DEBUG: ${{ env.IS_DEBUG }}
          DB_USER: ${{ env.USER_DB}}
          DB_PASSWORD: ${{ env.PASSWORD_DB}}
          DB_NAME: ${{ env.NAME_DB }}
          ALLOWED_HOSTS: ${{ env.HOSTS_ALLOWED }}
          SECRET_KEY: ${{ env.SECRET_KEY }}
          DB_ENGINE: ${{ env.DB_ENGINE }}
          DB_PORT: ${{ env.PORT_DB }}
          DB_HOST: ${{ env.HOST_DB }}

      - name: Тестирование unittest
        run: python manage.py test
        env:
          DEBUG: ${{ env.IS_DEBUG }}
          DB_USER: ${{ env.USER_DB}}
          DB_PASSWORD: ${{ env.PASSWORD_DB}}
          DB_NAME: ${{ env.NAME_DB }}
          ALLOWED_HOSTS: ${{ env.HOSTS_ALLOWED }}
          SECRET_KEY: ${{ env.SECRET_KEY }}
          DB_ENGINE: ${{ env.DB_ENGINE }}
          DB_PORT: ${{ env.PORT_DB }}
          DB_HOST: ${{ env.HOST_DB }}


      - name: Деплой
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          password: ${{ secrets.SSH_PASSWORD }}
          script: expect /home/roman/stocks_products/deploy.exp
